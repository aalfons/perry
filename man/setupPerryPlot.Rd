% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setupPerryPlot.R
\name{setupPerryPlot}
\alias{setupPerryPlot}
\alias{setupPerryPlot.perry}
\alias{setupPerryPlot.perrySelect}
\alias{setupPerryPlot.perryTuning}
\title{Set up a plot of resampling-based prediction error results}
\usage{
setupPerryPlot(object, ...)

\method{setupPerryPlot}{perry}(object, select = NULL, reps = NULL, seFactor = 1, ...)

\method{setupPerryPlot}{perrySelect}(
  object,
  subset = NULL,
  select = NULL,
  reps = NULL,
  seFactor = NULL,
  ...
)

\method{setupPerryPlot}{perryTuning}(object, ...)
}
\arguments{
\item{object}{an object inheriting from class \code{"perry"} or
\code{"perrySelect"} that contains prediction error results.}

\item{\dots}{for the \code{"perryTuning"} method, additional arguments to
be passed down to the \code{"perrySelect"} method.  For the other methods,
additional arguments are currently ignored.}

\item{select}{a character, integer or logical vector indicating the columns
of prediction error results to be prepared for plotting.}

\item{reps}{a logical indicating whether to prepare the results from all
replications (\code{TRUE}) or the aggregated results (\code{FALSE}).  The
former is suitable for box plots or smooth density plots, while the latter
is suitable for dot plots or line plots (see \code{\link{perryPlot}}).}

\item{seFactor}{a numeric value giving the multiplication factor of the
standard error for displaying error bars in dot plots or line plots.  Error
bars in those plots can be suppressed by setting this to \code{NA}.}

\item{subset}{a character, integer or logical vector indicating the subset
of models to be prepared for plotting.}
}
\value{
An object of class \code{"setupPerryPlot"} with the following
components:
\describe{
  \item{\code{data}}{a data frame containing the following columns:
  \describe{
    \item{\code{Fit}}{a vector or factor containing the identifiers of the
    models.}
    \item{\code{Name}}{a factor containing the names of the predictor error
    results (not returned in case of only one column of prediction error
    results with the default name).}
    \item{\code{PE}}{the estimated prediction errors.}
    \item{\code{Lower}}{the lower end points of the error bars (only
    returned if possible to compute).}
    \item{\code{Upper}}{the upper end points of the error bars (only
    returned if possible to compute).}
  }
  }
  \item{\code{reps}}{a logical indicating whether the results from all
  replications or the aggregated results have been prepared.}
  \item{\code{includeSE}}{a logical indicating whether error bars based on
  standard errors are available (only returned in case of aggregated
  results).}
  \item{\code{facets}}{default faceting formula for the plots (not returned
  in case of only one column of prediction error results with the default
  name).}
  \item{\code{tuning}}{a data frame containing the grid of tuning parameter
  values for which the prediction error was estimated (only returned for the
  \code{"perryTuning"} method).}
}
}
\description{
Extract and prepare the relevant information for a plot of results of
resampling-based prediction error measures.
}
\note{
Duplicate indices in \code{subset} or \code{select} are removed such
that all models and prediction error results are unique.
}
\examples{
library("perryExamples")
data("coleman")
set.seed(1234)  # set seed for reproducibility

## set up folds for cross-validation
folds <- cvFolds(nrow(coleman), K = 5, R = 10)

## compare LS, MM and LTS regression

# perform cross-validation for an LS regression model
fitLm <- lm(Y ~ ., data = coleman)
cvLm <- perry(fitLm, splits = folds,
    cost = rtmspe, trim = 0.1)

# perform cross-validation for an MM regression model
fitLmrob <- lmrob(Y ~ ., data = coleman, maxit.scale = 500)
cvLmrob <- perry(fitLmrob, splits = folds,
    cost = rtmspe, trim = 0.1)

# perform cross-validation for an LTS regression model
fitLts <- ltsReg(Y ~ ., data = coleman)
cvLts <- perry(fitLts, splits = folds,
    cost = rtmspe, trim = 0.1)

# combine results into one object
cv <- perrySelect(LS = cvLm, MM = cvLmrob, LTS = cvLts)
cv

## convert MM regression results to data frame for plotting
# all replications for box plot
cvLmrobBox <- setupPerryPlot(cvLmrob, reps = TRUE)
perryPlot(cvLmrobBox)
# aggregated results for dot plot
cvLmrobDot <- setupPerryPlot(cvLmrob, reps = FALSE, seFactor = 2)
perryPlot(cvLmrobDot)

## convert combined results to data frame for plotting
# all replications for box plot
cvBox <- setupPerryPlot(cv, reps = TRUE)
perryPlot(cvBox)
# aggregated results for dot plot
cvDot <- setupPerryPlot(cv, reps = FALSE, seFactor = 2)
perryPlot(cvDot)
}
\seealso{
\code{\link{perryPlot}},

\code{\link{perryFit}}, \code{\link{perrySelect}},
\code{\link{perryTuning}},

\code{\link[ggplot2]{ggplot}}, \code{\link[ggplot2]{autoplot}},
\code{\link[graphics]{plot}}
}
\author{
Andreas Alfons
}
\keyword{utilities}
